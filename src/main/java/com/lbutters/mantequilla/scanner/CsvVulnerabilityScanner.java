package com.lbutters.mantequilla.scanner;

import static java.nio.charset.StandardCharsets.UTF_8;

import java.util.stream.Stream;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;

public class CsvVulnerabilityScanner {

    private static final String CSV_EXT = ".csv";
    
    public Stream<String> findBadLines(InputStream csv) {
        // TODO: perhaps use a CSV parser, although is it needed are new 
        // line characters allowed within a CSV record?
        return new BufferedReader(new InputStreamReader(csv, UTF_8)).lines()
            .filter(line -> line.contains("malo"));
    }
    
    /**
     * Is the given filePath a CSV file.
     * 
     * In our case the filePath comes from a zip, probably best not to assume that.
     * 
     * @param filePath
     * @return
     */
    public boolean isCsvFile(String filePath) {
        return filePath.endsWith(CSV_EXT);
    }
    
    /**
     * Remove the .csv extension from the filePath
     * @param filePath
     * @return
     */
    public String stripCsvExtensionFromPath(String filePath) {
        return filePath.substring(0, filePath.length() - CSV_EXT.length());
    }
}
